[{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pablopnc.github.io/ROCnGO/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pablopnc.github.io/ROCnGO/articles/ROCnGO.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Introduction to ROCnGO","text":"order reproduce example, following packages needed:","code":"library(ROCnGO) library(dplyr) library(forcats)"},{"path":"https://pablopnc.github.io/ROCnGO/articles/ROCnGO.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to ROCnGO","text":"explore basic tools package using iris dataset. dataset contains 5 variables 150 flowers 3 different species: setosa, versicolor virginica. purpose simplicity, work subset iris, considering setosa virginica species. following sections, performance different variables classify cases different species evaluated.","code":"# Filter cases of versicolor species iris_subset <- as_tibble(iris) %>% filter(Species != \"versicolor\") iris_subset #> # A tibble: 100 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> # ℹ 90 more rows"},{"path":[]},{"path":"https://pablopnc.github.io/ROCnGO/articles/ROCnGO.html","id":"calculate-roc-curve","dir":"Articles","previous_headings":"Global performance","what":"Calculate ROC curve","title":"Introduction to ROCnGO","text":"foundation type analyses implies plot ROCROC curve classifier. type curves represent classifier probability correctly classify case condition interest, also known true positive rate Sensitivity\\text{Sensitivity} (TPRTPR), complementary probability correctly classify case without condition; also known false positive rate, 1−Specificity1 - \\text{Specificity}, 1−TNR1 - TNR, (FPRFPR). working classifier returns series numeric values, can complex say classifying case condition interest (positive) (negative). solve problem, ROCROC curves represent (FPR,TPR)(FPR, TPR) points considering hypothetical thresholds (cc) case considered positive value higher defined threshold (X>cX > c). curve points can calculated using roc_points(). functions package, takes dataset, data frame, first argument. second third argument refer variables data frame, corresponding variable used classifier (predictor) response variable want predict (response). example, can calculate ROCROC points Sepal.Length classifier setosa species.  may see, Sepal.Length doesn’t perform well predicting flower setosa species, fact ’s way around, lower Sepal.Length probable working setosa flower. can tested change condition interest virginica.","code":"# Calculate ROC points for Sepal.Lenght points <- roc_points(   data = iris_subset,   predictor = Sepal.Length,   response = Species ) points #> # A tibble: 101 × 2 #>      tpr   fpr #>  * <dbl> <dbl> #>  1  1        1 #>  2  0.98     1 #>  3  0.92     1 #>  4  0.92     1 #>  5  0.92     1 #>  6  0.9      1 #>  7  0.82     1 #>  8  0.82     1 #>  9  0.82     1 #> 10  0.82     1 #> # ℹ 91 more rows  # Plot points plot(points$fpr, points$tpr)"},{"path":"https://pablopnc.github.io/ROCnGO/articles/ROCnGO.html","id":"changing-condition-of-interest","dir":"Articles","previous_headings":"Global performance","what":"Changing condition of interest","title":"Introduction to ROCnGO","text":"default, condition interest automatically set first value levels(response), can change value changing order levels data.","code":"# Check response levels levels(iris_subset$Species) #> [1] \"setosa\"     \"versicolor\" \"virginica\"  # Set virginica as first value in levels iris_subset$Species <- fct_relevel(iris_subset$Species, \"virginica\") levels(iris_subset$Species) #> [1] \"virginica\"  \"setosa\"     \"versicolor\"  # Plot ROC curve points <- roc_points(   data = iris_subset,   predictor = Sepal.Length,   response = Species ) plot(points$fpr, points$tpr)"},{"path":"https://pablopnc.github.io/ROCnGO/articles/ROCnGO.html","id":"local-performance","dir":"Articles","previous_headings":"","what":"Local performance","title":"Introduction to ROCnGO","text":"Sometimes certain task may requiere prioritize e.g. high sensitivity global performance. scenarios, ’s preferable work specific regions ROCROC curve. can calculate points specific region using calc_partial_roc_points(). Function uses arguments roc_points() adding lower_threshold, upper_threshold ratio, delimit region want work. example, require work high sensitivity conditions, check points region (0.9,1)(0.9, 1) TPRTPR.","code":"# Calc partial ROC points p_points <- calc_partial_roc_points(   data = iris_subset,   predictor = Sepal.Length,   response = Species,   lower_threshold = 0.9,   upper_threshold = 1,   ratio = \"tpr\" ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation p_points #> # A tibble: 54 × 2 #>      tpr     fpr #>  * <dbl>   <dbl> #>  1  0.9  0.00667 #>  2  0.94 0.02    #>  3  0.94 0.02    #>  4  0.94 0.02    #>  5  0.96 0.06    #>  6  0.98 0.06    #>  7  0.98 0.06    #>  8  0.98 0.1     #>  9  0.98 0.1     #> 10  0.98 0.1     #> # ℹ 44 more rows  # Plot partial ROC curve plot(p_points$fpr, p_points$tpr)"},{"path":[]},{"path":"https://pablopnc.github.io/ROCnGO/articles/ROCnGO.html","id":"performance-metrics","dir":"Articles","previous_headings":"Automating analysis","what":"Performance metrics","title":"Introduction to ROCnGO","text":"working high number classifiers, can difficult check ROCROC individually. scenarios, metrics AUCAUC pAUCpAUC may present interest. Thus, using function summarize_predictor() can obtain overview performance classifier. example, consider performance Sepal.Length high sensitivity region, TPR∈(0.9,1)TPR \\(0.9, 1), high specificity region, FPR∈(0,0.1)FPR \\(0, 0.1). Besides AUCAUC pAUCpAUC, function also returns partial indexes derived pAUCpAUC provide better interpretation performance pAUCpAUC. Furthermore, interested computing metrics simultaneously several classifiers summarize_dataset() can used, also provides metrics analysed classifiers.","code":"# Summarize predictor in high sens region summarize_predictor(   data = iris_subset,   predictor = Sepal.Length,   response = Species,   threshold = 0.9,   ratio = \"tpr\" ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> # A tibble: 1 × 5 #>     auc   pauc np_auc fp_auc curve_shape #>   <dbl>  <dbl>  <dbl>  <dbl> <chr>       #> 1 0.985 0.0847  0.847  0.852 Concave  # Summarize predictor in high spec region summarize_predictor(   data = iris_subset,   predictor = Sepal.Length,   response = Species,   threshold = 0.1,   ratio = \"fpr\" ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> # A tibble: 1 × 5 #>     auc   pauc sp_auc tp_auc curve_shape #>   <dbl>  <dbl>  <dbl>  <dbl> <chr>       #> 1 0.985 0.0954  0.976  0.973 Concave summarize_dataset(   data = iris_subset,   response = Species,   threshold = 0.9,   ratio = \"tpr\" ) #> ℹ Lower 0.9 and upper 1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> $data #> # A tibble: 4 × 6 #>   identifier     auc   pauc np_auc fp_auc curve_shape       #>   <chr>        <dbl>  <dbl>  <dbl>  <dbl> <chr>             #> 1 Sepal.Length 0.985 0.0847 0.847   0.852 Concave           #> 2 Sepal.Width  0.166 0.0016 0.0160  0.9   Hook under chance #> 3 Petal.Length 1     0.1    1       1     Concave           #> 4 Petal.Width  1     0.1    1       1     Concave           #>  #> $curve_shape #> # A tibble: 2 × 2 #>   curve_shape       count #>   <chr>             <int> #> 1 Concave               3 #> 2 Hook under chance     1 #>  #> $auc #> # A tibble: 2 × 3 #> # Groups:   auc > 0.5 [2] #>   `auc > 0.5` `auc > 0.8` count #>   <lgl>       <lgl>       <int> #> 1 FALSE       FALSE           1 #> 2 TRUE        TRUE            3"},{"path":"https://pablopnc.github.io/ROCnGO/articles/ROCnGO.html","id":"plotting","dir":"Articles","previous_headings":"Automating analysis","what":"Plotting","title":"Introduction to ROCnGO","text":"seen, using output roc_points() can plot ROCROC curve. Nevertheless, plots can also generated using plot_*() add_*() functions, provide options customize plot classifier comparison. example, can plot ROCROC points Sepal.Length way.  Now using + operator can add options plot. example, including chance line, adding ROCROC points classifiers, etc.","code":"# Plot ROC points of Sepal.Length sepal_length_plot <- plot_roc_points(   data = iris_subset,   predictor = Sepal.Length,   response = Species ) sepal_length_plot sepal_length_plot +   add_roc_curve(     data = iris_subset,     predictor = Sepal.Width,     response = Species   ) +   add_roc_points(     data = iris_subset,     predictor = Petal.Width,     response = Species   ) +   add_partial_roc_curve(     data = iris_subset,     predictor = Petal.Length,     response = Species,     ratio = \"tpr\",     threshold = 0.7   ) +   add_threshold_line(     threshold = 0.7,     ratio = \"tpr\"   ) +   add_chance_line()"},{"path":"https://pablopnc.github.io/ROCnGO/articles/selecting-condition.html","id":"selection-of-the-condition-of-interest","dir":"Articles","previous_headings":"","what":"Selection of the condition of interest","title":"Selecting condition of interest","text":"mentioned , outcomes analyses can dichotomized condition interest (D=1)(D=1) (D=0)(D=0). way, ROCnGO internally transform variable case outcome (response) factor values 1 0, representing presence absence condition. Taking following example three different outcomes, considered setosa condition interest, following factor generated. response may different types, order select default class correspond condition interest among values, library functions follow criteria based variable type: integer. working integer vector, functions consider smallest one class predict. character. working character vector, functions consider first value using sort() posible options. factor. working factor variable, functions select first class levels(). classes identified class predict combined common category, labelled 0.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/articles/selecting-condition.html","id":"condition-argument","dir":"Articles","previous_headings":"","what":".condition argument","title":"Selecting condition of interest","text":"Sometimes, default criteria used functions may desirable. Thus, want change category identified condition interest can use .condition argument. argument takes input one values response, setting condition interest classifier.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/articles/selecting-condition.html","id":"examples","dir":"Articles","previous_headings":".condition argument","what":"Examples","title":"Selecting condition of interest","text":"behaviours can tested following examples. first place create small dataset using small subset iris dataset. created dataset, can check performance different variables predictors species, task may use summarize_dataset() function. may see Sepal.Width scores best performance dataset, least setosa species. mentioned , class selected condition interest since first element species levels. Furthermore, performance Sepal.Width setosa classifier may addressed since presents slightly higher scores. Now, want repeat analysis considering virginica species interest, can consider .condition argument. may see, new results highly differ previous ones. Now Sepal.Length, Petal.Length Petal.Width behave better classifiers instead Sepal.Width. way, results can qualitatively matched values dataset, variables score higher species.","code":"# Create a small subset of iris with 5 random flowers of each species iris_subset <- as_tibble(iris) %>%   group_by(Species) %>%   slice_sample(n = 5) %>%   ungroup() iris_subset #> # A tibble: 15 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species    #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>      #>  1          5.1         3.8          1.9         0.4 setosa     #>  2          4.6         3.6          1           0.2 setosa     #>  3          4.8         3.4          1.6         0.2 setosa     #>  4          5.5         3.5          1.3         0.2 setosa     #>  5          4.9         3.6          1.4         0.1 setosa     #>  6          5.7         2.9          4.2         1.3 versicolor #>  7          5.7         2.8          4.1         1.3 versicolor #>  8          5.5         2.4          3.8         1.1 versicolor #>  9          5.5         2.3          4           1.3 versicolor #> 10          6.3         2.3          4.4         1.3 versicolor #> 11          6.7         2.5          5.8         1.8 virginica  #> 12          6.5         3            5.8         2.2 virginica  #> 13          6.2         3.4          5.4         2.3 virginica  #> 14          6.3         2.7          4.9         1.8 virginica  #> 15          5.8         2.8          5.1         2.4 virginica # Check levels in Species levels(iris_subset$Species) #> [1] \"setosa\"     \"versicolor\" \"virginica\"  # Summarize dataset classifiers iris_results <- summarize_dataset(   iris_subset,   response = Species,   ratio = \"tpr\",   threshold = 0.9 ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation iris_results$data #> # A tibble: 4 × 6 #>   identifier     auc   pauc np_auc  fp_auc curve_shape       #>   <chr>        <dbl>  <dbl>  <dbl>   <dbl> <chr>             #> 1 Sepal.Length  0.02 0       0     NaN     Hook under chance #> 2 Sepal.Width   0.99 0.0925  0.925   0.974 Concave           #> 3 Petal.Length  0    0       0     NaN     Hook under chance #> 4 Petal.Width   0    0       0     NaN     Hook under chance # Summarize dataset classifiers with virginica species as D=1 virginica_results <- summarize_dataset(   iris_subset,   response = Species,   ratio = \"tpr\",   threshold = 0.9,   .condition = \"virginica\" ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation virginica_results$data #> # A tibble: 4 × 6 #>   identifier     auc  pauc np_auc fp_auc curve_shape #>   <chr>        <dbl> <dbl>  <dbl>  <dbl> <chr>       #> 1 Sepal.Length  0.95  0.09    0.9      1 Concave     #> 2 Sepal.Width   0.4   0.03    0.3      1 Concave     #> 3 Petal.Length  1     0.1     1        1 Concave     #> 4 Petal.Width   1     0.1     1        1 Concave"},{"path":"https://pablopnc.github.io/ROCnGO/articles/selecting-condition.html","id":"manual-selection-of-the-condition-of-interest","dir":"Articles","previous_headings":"","what":"Manual selection of the condition of interest","title":"Selecting condition of interest","text":"Sometimes, may useful select manually condition interest. may case, e.g. working variable type easily treated. order manually select condition, simply transform response another type can recognized library, even .condition may used specify class use. Alternatively, can transform response factor 0 1 values, first item levels() 0. Library recognizes variable needing treatment, can used easily define new responses.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/articles/selecting-condition.html","id":"examples-1","dir":"Articles","previous_headings":"Manual selection of the condition of interest","what":"Examples","title":"Selecting condition of interest","text":"can check manual selection following example. scenario, supposing make directly calculations Species need define new variables . Now can evaluate classifier performance. may see results scenario correspond ones obtained previous section, evaluated Species variable using .condition = \"virginica\" directly.","code":"# Create new variables to evaluate \"virginica\" species classifiers iris_subset <- iris_subset %>%   mutate(     Species_int = ifelse(Species == \"virginica\", 2L, 1L),     Species_fct = factor(       ifelse(Species == \"virginica\", 1, 0),       levels = c(0, 1)     )   ) # Check new variables iris_subset[, c(\"Species\", \"Species_int\", \"Species_fct\")] #> # A tibble: 15 × 3 #>    Species    Species_int Species_fct #>    <fct>            <int> <fct>       #>  1 setosa               1 0           #>  2 setosa               1 0           #>  3 setosa               1 0           #>  4 setosa               1 0           #>  5 setosa               1 0           #>  6 versicolor           1 0           #>  7 versicolor           1 0           #>  8 versicolor           1 0           #>  9 versicolor           1 0           #> 10 versicolor           1 0           #> 11 virginica            2 1           #> 12 virginica            2 1           #> 13 virginica            2 1           #> 14 virginica            2 1           #> 15 virginica            2 1 # Select predictors predictors <- c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\")  # Check performance of virginica classifiers with .condition = 2 int_results <- summarize_dataset(   iris_subset,   predictors = predictors,   response = Species_int,   ratio = \"tpr\",   threshold = 0.9,   .condition = 2 ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation int_results$data #> # A tibble: 4 × 6 #>   identifier     auc  pauc np_auc fp_auc curve_shape #>   <chr>        <dbl> <dbl>  <dbl>  <dbl> <chr>       #> 1 Sepal.Length  0.95  0.09    0.9      1 Concave     #> 2 Sepal.Width   0.4   0.03    0.3      1 Concave     #> 3 Petal.Length  1     0.1     1        1 Concave     #> 4 Petal.Width   1     0.1     1        1 Concave  # Check performance of virginica classifiers with factor fct_results <- summarize_dataset(   iris_subset,   predictors = predictors,   response = Species_fct,   ratio = \"tpr\",   threshold = 0.9 ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation fct_results$data #> # A tibble: 4 × 6 #>   identifier     auc  pauc np_auc fp_auc curve_shape #>   <chr>        <dbl> <dbl>  <dbl>  <dbl> <chr>       #> 1 Sepal.Length  0.95  0.09    0.9      1 Concave     #> 2 Sepal.Width   0.4   0.03    0.3      1 Concave     #> 3 Petal.Length  1     0.1     1        1 Concave     #> 4 Petal.Width   1     0.1     1        1 Concave"},{"path":"https://pablopnc.github.io/ROCnGO/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo Navarro. Author, maintainer, copyright holder. Juana-María Vivo. Author. Manuel Franco. Author.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Navarro P, Franco M, Vivo J (2025). Fast analysis ROC curves. R package version 0.0.0.9.","code":"@Manual{,   title = {Fast analysis of ROC curves},   author = {Pablo Navarro and Manuel Franco and Juana-María Vivo},   year = {2025},   note = {R package version 0.0.0.9}, }"},{"path":[]},{"path":"https://pablopnc.github.io/ROCnGO/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Fast Analysis of ROC Curves","text":"ROCnGO provides set tools study classifier performance using ROC curve based analysis. Package may address tasks type analysis : Evaluating global classifier performance. Better interpretation local performance. Better power discrimination classifiers similar performance. Evaluating performance several classifier simultaneously. Plot whole, specific regions, ROC curves.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast Analysis of ROC Curves","text":"Alternatively, development version ROCnGO can installed GitHub repository :","code":"install.packages(\"ROCnGO\") # install.packages(\"devtools\") devtools::install_github(\"pabloPNC/ROCnGO\")"},{"path":"https://pablopnc.github.io/ROCnGO/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Fast Analysis of ROC Curves","text":"","code":"library(ROCnGO)  # Iris subset iris_subset <- iris[iris$Species != \"versicolor\", ]  # Select Species = \"virginica\" as the condition of interest iris_subset$Species <- relevel(iris_subset$Species, \"virginica\")  # Summarize a predictor over high sensitivity region summarize_predictor(   iris_subset,   predictor = Sepal.Length,   response = Species,   threshold = 0.9,   ratio = \"tpr\" ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> # A tibble: 1 × 5 #>     auc   pauc np_auc fp_auc curve_shape #>   <dbl>  <dbl>  <dbl>  <dbl> <chr>       #> 1 0.985 0.0847  0.847  0.852 Concave # Summarize several predictors simultaneously summarize_dataset(   iris_subset,   predictor = c(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width),   response = Species,   threshold = 0.9,   ratio = \"tpr\" ) #> ℹ Lower 0.9 and upper 1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> $data #> # A tibble: 4 × 6 #>   identifier     auc   pauc np_auc fp_auc curve_shape       #>   <chr>        <dbl>  <dbl>  <dbl>  <dbl> <chr>             #> 1 Sepal.Length 0.985 0.0847 0.847   0.852 Concave           #> 2 Sepal.Width  0.166 0.0016 0.0160  0.9   Hook under chance #> 3 Petal.Length 1     0.1    1       1     Concave           #> 4 Petal.Width  1     0.1    1       1     Concave           #>  #> $curve_shape #> # A tibble: 2 × 2 #>   curve_shape       count #>   <chr>             <int> #> 1 Concave               3 #> 2 Hook under chance     1 #>  #> $auc #> # A tibble: 2 × 3 #> # Groups:   auc > 0.5 [2] #>   `auc > 0.5` `auc > 0.8` count #>   <lgl>       <lgl>       <int> #> 1 FALSE       FALSE           1 #> 2 TRUE        TRUE            3 # Plot ROC curve of classifiers plot_roc_curve(iris_subset, predictor = Sepal.Length, response = Species) +   add_roc_curve(iris_subset, predictor = Petal.Length, response = Species) +   add_roc_points(iris_subset, predictor = Sepal.Width, response = Species) +   add_chance_line()"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_chance_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Show chance line in a ROC plot — add_chance_line","title":"Show chance line in a ROC plot — add_chance_line","text":"Plot chance line ROC plot.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_chance_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show chance line in a ROC plot — add_chance_line","text":"","code":"add_chance_line()"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_chance_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show chance line in a ROC plot — add_chance_line","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +  add_chance_line()"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a section of a ROC curve to an existing one — add_partial_roc_curve","title":"Add a section of a ROC curve to an existing one — add_partial_roc_curve","text":"Add specific region ROC curve existing ROC plot.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a section of a ROC curve to an existing one — add_partial_roc_curve","text":"","code":"add_partial_roc_curve(   data,   response = NULL,   predictor = NULL,   ratio,   threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a section of a ROC curve to an existing one — add_partial_roc_curve","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. threshold number 0 1, inclusive, represents region bound calculate partial area curve. ratio = \"tpr\", represents lower bound TPR region, upper limit equal 1. ratio = \"fpr\", represents upper bound FPR region, lower limit equal 0. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a section of a ROC curve to an existing one — add_partial_roc_curve","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +   add_partial_roc_curve(     iris,     response = Species,     predictor = Sepal.Length,     ratio = \"tpr\",     threshold = 0.9   )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Add points in a section of a ROC curve to an existing plot — add_partial_roc_points","title":"Add points in a section of a ROC curve to an existing plot — add_partial_roc_points","text":"Add points specific ROC region existing ROC plot.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add points in a section of a ROC curve to an existing plot — add_partial_roc_points","text":"","code":"add_partial_roc_points(   data,   response = NULL,   predictor = NULL,   ratio,   threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add points in a section of a ROC curve to an existing plot — add_partial_roc_points","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. threshold number 0 1, inclusive, represents region bound calculate partial area curve. ratio = \"tpr\", represents lower bound TPR region, upper limit equal 1. ratio = \"fpr\", represents upper bound FPR region, lower limit equal 0. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_partial_roc_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add points in a section of a ROC curve to an existing plot — add_partial_roc_points","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +   add_partial_roc_points(     iris,     response = Species,     predictor = Sepal.Length,     ratio = \"tpr\",     threshold = 0.9   )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a ROC curve plot to an existing one — add_roc_curve","title":"Add a ROC curve plot to an existing one — add_roc_curve","text":"Add ROC curve existing ROC plot.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a ROC curve plot to an existing one — add_roc_curve","text":"","code":"add_roc_curve(   data,   response = NULL,   predictor = NULL,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a ROC curve plot to an existing one — add_roc_curve","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a ROC curve plot to an existing one — add_roc_curve","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +  add_roc_curve(iris, response = Species, predictor = Sepal.Length)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ROC points plot to an existing one — add_roc_points","title":"Add ROC points plot to an existing one — add_roc_points","text":"Add ROC points existing ROC plot.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ROC points plot to an existing one — add_roc_points","text":"","code":"add_roc_points(   data,   response = NULL,   predictor = NULL,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ROC points plot to an existing one — add_roc_points","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/add_roc_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ROC points plot to an existing one — add_roc_points","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +  add_roc_points(iris, response = Species, predictor = Sepal.Length)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate area under ROC curve — auc","title":"Calculate area under ROC curve — auc","text":"Calculates area curve (AUC) predictor's ROC curve.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate area under ROC curve — auc","text":"","code":"auc(data = NULL, response, predictor, .condition = NULL)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate area under ROC curve — auc","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate area under ROC curve — auc","text":"numerical value representing area ROC curve.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate area under ROC curve — auc","text":"","code":"# Calc AUC of Sepal.Width as a classifier of setosa species auc(iris, Species, Sepal.Width) #> [1] 0.8796 # Change class to predict to virginica auc(iris, Species, Sepal.Width, .condition = \"virginica\") #> [1] 0.4146"},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_curve_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate curve shape over an specific region — calc_curve_shape","title":"Calculate curve shape over an specific region — calc_curve_shape","text":"calc_curve_shape() calculates ROC curve shape specified region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_curve_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate curve shape over an specific region — calc_curve_shape","text":"","code":"calc_curve_shape(   data = NULL,   response = NULL,   predictor = NULL,   lower_threshold,   upper_threshold,   ratio,   .condition = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_curve_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate curve shape over an specific region — calc_curve_shape","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. lower_threshold, upper_threshold Two numbers 0 1, inclusive. numbers represent lower upper bounds region apply calculations. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_curve_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate curve shape over an specific region — calc_curve_shape","text":"string indicating ROC curve shape specified region. Result can take following values: \"Concave\". ROC curve concave entire specified region. \"Partially proper\". ROC curve loses concavity point specified region. \"Hook chance\". ROC curve loses concavity point region lies chance line.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_curve_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate curve shape over an specific region — calc_curve_shape","text":"","code":"# Calc ROC curve shape of Sepal.Width as a classifier of setosa species # in TPR = (0.9, 1) calc_curve_shape(iris, Species, Sepal.Width, 0.9, 1, \"tpr\") #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> [1] \"Partially proper\" # Change class to virginica calc_curve_shape(iris, Species, Sepal.Width, 0.9, 1, \"tpr\", .condition = \"virginica\") #> ℹ Lower 0.9 and upper 1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> [1] \"Concave\""},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_partial_roc_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ROC curve partial points — calc_partial_roc_points","title":"Calculate ROC curve partial points — calc_partial_roc_points","text":"Calculates series pairs (FPR, TPR) correspond ROC curve points specified region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_partial_roc_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ROC curve partial points — calc_partial_roc_points","text":"","code":"calc_partial_roc_points(   data = NULL,   response = NULL,   predictor = NULL,   lower_threshold,   upper_threshold,   ratio,   .condition = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_partial_roc_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ROC curve partial points — calc_partial_roc_points","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. lower_threshold, upper_threshold Two numbers 0 1, inclusive. numbers represent lower upper bounds region apply calculations. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_partial_roc_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ROC curve partial points — calc_partial_roc_points","text":"tibble two columns: \"partial_tpr\". Containing \"true positive ratio\", y, values points within specified region. \"partial_fpr\". Containing \"false positive ratio\", x, values points within specified region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/calc_partial_roc_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ROC curve partial points — calc_partial_roc_points","text":"","code":"# Calc ROC points of Sepal.Width as a classifier of setosa species # in TPR = (0.9, 1) calc_partial_roc_points(  iris,  response = Species,  predictor = Sepal.Width,  lower_threshold = 0.9,  upper_threshold = 1,  ratio = \"tpr\" ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> # A tibble: 59 × 2 #>      tpr   fpr #>  * <dbl> <dbl> #>  1  0.9   0.35 #>  2  0.96  0.45 #>  3  0.96  0.45 #>  4  0.96  0.45 #>  5  0.96  0.45 #>  6  0.96  0.45 #>  7  0.96  0.45 #>  8  0.96  0.45 #>  9  0.96  0.45 #> 10  0.96  0.45 #> # ℹ 49 more rows  # Change class to virginica calc_partial_roc_points(  iris,  response = Species,  predictor = Sepal.Width,  lower_threshold = 0.9,  upper_threshold = 1,  ratio = \"tpr\",  .condition = \"virginica\" ) #> ℹ Lower 0.9 and upper 1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> # A tibble: 20 × 2 #>      tpr   fpr #>  * <dbl> <dbl> #>  1  0.9   0.86 #>  2  0.9   0.86 #>  3  0.9   0.86 #>  4  0.9   0.86 #>  5  0.9   0.86 #>  6  0.9   0.86 #>  7  0.9   0.86 #>  8  0.9   0.86 #>  9  0.98  0.9  #> 10  0.98  0.9  #> 11  0.98  0.9  #> 12  0.98  0.93 #> 13  0.98  0.93 #> 14  0.98  0.93 #> 15  0.98  0.93 #> 16  0.98  0.97 #> 17  0.98  0.97 #> 18  0.98  0.97 #> 19  1     0.99 #> 20  1     1"},{"path":"https://pablopnc.github.io/ROCnGO/reference/concordance_indexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concordance indexes — concordance_indexes","title":"Concordance indexes — concordance_indexes","text":"Concordance derived indexes allow calculation explanation area ROC curve specific region. use dual perspective since consider TPR FPR ranges enclose region interest. cp_auc() applies concordan partial area curve (CpAUC), ncp_auc() applies normalized version dividing total area.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/concordance_indexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concordance indexes — concordance_indexes","text":"","code":"cp_auc(   data = NULL,   response,   predictor,   lower_threshold,   upper_threshold,   ratio,   .condition = NULL )  ncp_auc(   data = NULL,   response,   predictor,   lower_threshold,   upper_threshold,   ratio,   .condition = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/concordance_indexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concordance indexes — concordance_indexes","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. lower_threshold, upper_threshold Two numbers 0 1, inclusive. numbers represent lower upper bounds region apply calculations. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/concordance_indexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concordance indexes — concordance_indexes","text":"numeric value representing index score partial area ROC curve.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/concordance_indexes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Concordance indexes — concordance_indexes","text":"Carrington, André M., et al. new concordant partial AUC partial c statistic imbalanced data evaluation machine learning algorithms. BMC medical informatics decision making 20 (2020): 1-12.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/concordance_indexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concordance indexes — concordance_indexes","text":"","code":"# Calculate cp_auc of Sepal.Width as a classifier of setosa especies in # FPR = (0, 0.1) cp_auc(   iris,   response = Species,   predictor = Sepal.Width,   lower_threshold = 0,   upper_threshold = 0.1,   ratio = \"fpr\" ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> [1] 0.3446 # Calculate ncp_auc of Sepal.Width as a classifier of setosa especies in # FPR = (0, 0.1) ncp_auc(   iris,   response = Species,   predictor = Sepal.Width,   lower_threshold = 0,   upper_threshold = 0.1,   ratio = \"fpr\" ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> [1] 0.9068421"},{"path":"https://pablopnc.github.io/ROCnGO/reference/fpauc_lower_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add FpAUC lower bound to a ROC plot — add_fpauc_partially_proper_lower_bound","title":"Add FpAUC lower bound to a ROC plot — add_fpauc_partially_proper_lower_bound","text":"Calculate plot lower bound defined FpAUC sensitivity index. add_fpauc_lower_bound() provides upper level function automatically calculates curve shape plots lower bound better fits . add_fpauc_partially_proper_lower_bound() add_fpauc_concave_lower_bound() lower level functions enforce plot specific bounds. First one plots lower bound curve shape partially proper (presents kind hook). Second one plots lower bound curve shape concave region interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/fpauc_lower_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add FpAUC lower bound to a ROC plot — add_fpauc_partially_proper_lower_bound","text":"","code":"add_fpauc_partially_proper_lower_bound(   data,   response = NULL,   predictor = NULL,   threshold,   .condition = NULL,   .label = NULL )  add_fpauc_concave_lower_bound(   data,   response = NULL,   predictor = NULL,   threshold,   .condition = NULL,   .label = NULL )  add_fpauc_lower_bound(   data,   response = NULL,   predictor = NULL,   threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/fpauc_lower_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add FpAUC lower bound to a ROC plot — add_fpauc_partially_proper_lower_bound","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. threshold number 0 1, inclusive. number represents lower value TPR region calculate plot lower bound. definition fp_auc(), region upper bound established 1. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/fpauc_lower_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add FpAUC lower bound to a ROC plot — add_fpauc_partially_proper_lower_bound","text":"","code":"# Add lower bound based on curve shape (Concave) plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +   add_fpauc_lower_bound(     data = iris,     response = Species,     predictor = Sepal.Width,     threshold = 0.9   ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation"},{"path":"https://pablopnc.github.io/ROCnGO/reference/hide_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide legend in a ROC plot — hide_legend","title":"Hide legend in a ROC plot — hide_legend","text":"Hide legend showing name ploted classifiers bounds ROC curve plot.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/hide_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide legend in a ROC plot — hide_legend","text":"","code":"hide_legend()"},{"path":"https://pablopnc.github.io/ROCnGO/reference/npauc_lower_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add NpAUC lower bound to a ROC plot — npauc_lower_bounds","title":"Add NpAUC lower bound to a ROC plot — npauc_lower_bounds","text":"Calculate plot lower bound defined NpAUC specificity index. add_npauc_normalized_lower_bound() allows plot normalized lower bound, used formally calculate NpAUC. add_npauc_lower_bound() lower level function providing way plot lower bound previous normalization.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/npauc_lower_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add NpAUC lower bound to a ROC plot — npauc_lower_bounds","text":"","code":"add_npauc_lower_bound(   data,   response = NULL,   predictor = NULL,   threshold,   .condition = NULL,   .label = NULL )  add_npauc_normalized_lower_bound(   data,   response = NULL,   predictor = NULL,   threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/npauc_lower_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add NpAUC lower bound to a ROC plot — npauc_lower_bounds","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. threshold number 0 1, inclusive. number represents lower value TPR region calculate plot lower bound. definition np_auc(), region upper bound established 1. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/npauc_lower_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add NpAUC lower bound to a ROC plot — npauc_lower_bounds","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +   add_npauc_lower_bound(     iris,     response = Species,     predictor = Sepal.Width,     threshold = 0.9   )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/pauc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate partial area under curve — pauc","title":"Calculate partial area under curve — pauc","text":"Calculates area curve curve specific TPR FPR region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/pauc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate partial area under curve — pauc","text":"","code":"pauc(   data = NULL,   response,   predictor,   ratio,   lower_threshold,   upper_threshold,   .condition = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/pauc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate partial area under curve — pauc","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. lower_threshold, upper_threshold Two numbers 0 1, inclusive. numbers represent lower upper bounds region apply calculations. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/pauc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate partial area under curve — pauc","text":"numeric value representing area ROC curve specified region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/pauc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate partial area under curve — pauc","text":"","code":"# Calculate pauc of Sepal.Width as a classifier of setosa species in # in TPR = (0.9, 1) pauc(   iris,   response = Species,   predictor = Sepal.Width,   ratio = \"tpr\",   lower_threshold = 0.9,   upper_threshold = 1 ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> [1] 0.0472 # Calculate pauc of Sepal.Width as a classifier of setosa species in # in FPR = (0, 0.1) pauc(   iris,   response = Species,   predictor = Sepal.Width,   ratio = \"fpr\",   lower_threshold = 0,   upper_threshold = 0.1 ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> [1] 0.0476"},{"path":"https://pablopnc.github.io/ROCnGO/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://pablopnc.github.io/ROCnGO/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a section of a classifier ROC curve — plot_partial_roc_curve","title":"Plot a section of a classifier ROC curve — plot_partial_roc_curve","text":"Create curve plot using points specific region ROC curve.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a section of a classifier ROC curve — plot_partial_roc_curve","text":"","code":"plot_partial_roc_curve(   data,   response = NULL,   predictor = NULL,   ratio,   threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a section of a classifier ROC curve — plot_partial_roc_curve","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. threshold number 0 1, inclusive, represents region bound calculate partial area curve. ratio = \"tpr\", represents lower bound TPR region, upper limit equal 1. ratio = \"fpr\", represents upper bound FPR region, lower limit equal 0. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a section of a classifier ROC curve — plot_partial_roc_curve","text":"","code":"plot_partial_roc_curve(  iris,  response = Species,  predictor = Sepal.Width,  ratio = \"tpr\",  threshold = 0.9 )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot points in a region of a ROC curve — plot_partial_roc_points","title":"Plot points in a region of a ROC curve — plot_partial_roc_points","text":"Create scatter plot using points specific region ROC curve.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot points in a region of a ROC curve — plot_partial_roc_points","text":"","code":"plot_partial_roc_points(   data,   response = NULL,   predictor = NULL,   ratio,   threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot points in a region of a ROC curve — plot_partial_roc_points","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. threshold number 0 1, inclusive, represents region bound calculate partial area curve. ratio = \"tpr\", represents lower bound TPR region, upper limit equal 1. ratio = \"fpr\", represents upper bound FPR region, lower limit equal 0. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_partial_roc_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot points in a region of a ROC curve — plot_partial_roc_points","text":"","code":"plot_partial_roc_points(  iris,  response = Species,  predictor = Sepal.Width,  ratio = \"tpr\",  threshold = 0.9 )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a classifier ROC curve — plot_roc_curve","title":"Plot a classifier ROC curve — plot_roc_curve","text":"Create curve plot using ROC curve points.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a classifier ROC curve — plot_roc_curve","text":"","code":"plot_roc_curve(   data,   response = NULL,   predictor = NULL,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a classifier ROC curve — plot_roc_curve","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a classifier ROC curve — plot_roc_curve","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot classifier points of a ROC curve — plot_roc_points","title":"Plot classifier points of a ROC curve — plot_roc_points","text":"Create scatter plot using ROC curve points.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot classifier points of a ROC curve — plot_roc_points","text":"","code":"plot_roc_points(   data,   response = NULL,   predictor = NULL,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot classifier points of a ROC curve — plot_roc_points","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_roc_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot classifier points of a ROC curve — plot_roc_points","text":"","code":"plot_roc_points(iris, response = Species, predictor = Sepal.Width)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_thresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a threshold line to a ROC plot — add_fpr_threshold_line","title":"Add a threshold line to a ROC plot — add_fpr_threshold_line","text":"Include threshold line specified axis.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_thresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a threshold line to a ROC plot — add_fpr_threshold_line","text":"","code":"add_fpr_threshold_line(threshold)  add_tpr_threshold_line(threshold)  add_threshold_line(threshold, ratio = NULL)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_thresholds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a threshold line to a ROC plot — add_fpr_threshold_line","text":"threshold number 0 1, inclusive, represents region bound calculate partial area curve. ratio = \"tpr\", represents lower bound TPR region, upper limit equal 1. ratio = \"fpr\", represents upper bound FPR region, lower limit equal 0. ratio Ratio display threshold. \"tpr\" threshold displayed TPR, y axis \"fpr\" displayed FPR, x axis.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/plot_thresholds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a threshold line to a ROC plot — add_fpr_threshold_line","text":"","code":"# Add two threshold line in TPR = 0.9 and FPR = 0.1 plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +  add_threshold_line(threshold = 0.9, ratio = \"tpr\") +  add_threshold_line(threshold = 0.1, ratio = \"fpr\")  # Add threshold line in TPR = 0.9 plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +  add_tpr_threshold_line(threshold = 0.9)  # Add threshold line in FPR = 0.1 plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +  add_fpr_threshold_line(threshold = 0.1)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/reorder_response_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish condition of interest as 1 and absence as 0. — reorder_response_factor","title":"Establish condition of interest as 1 and absence as 0. — reorder_response_factor","text":"Transforms levels factor 1 match condition interest ( condition) 0 otherwise (absent) 0 otherwise (absent).","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/reorder_response_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish condition of interest as 1 and absence as 0. — reorder_response_factor","text":"","code":"reorder_response_factor(response_fct, condition, absent)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/reorder_response_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish condition of interest as 1 and absence as 0. — reorder_response_factor","text":"response_fct factor different categories (levels). condition Name category condition interest. absent Character vector categories corresponding condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/reorder_response_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish condition of interest as 1 and absence as 0. — reorder_response_factor","text":"factorwith values (0, 1) 1 matches condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/roc_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ROC curve points — roc_points","title":"Calculate ROC curve points — roc_points","text":"Calculates series pairs (FPR, TPR) correspond points displayed ROC curve. \"false positive ratio\" represented x axis, \"true positive ratio\" y one.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/roc_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ROC curve points — roc_points","text":"","code":"roc_points(data = NULL, response, predictor, .condition = NULL)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/roc_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ROC curve points — roc_points","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/roc_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ROC curve points — roc_points","text":"tibble two columns: \"tpr\". Containing values \"true positive ratio\", y axis. \"fpr\". Containing values \"false positive ratio\", x axis.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/roc_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ROC curve points — roc_points","text":"","code":"# Calc ROC points of Sepal.Width as a classifier of setosa species roc_points(iris, Species, Sepal.Width) #> # A tibble: 151 × 2 #>      tpr   fpr #>  * <dbl> <dbl> #>  1  1     1    #>  2  1     0.99 #>  3  1     0.96 #>  4  1     0.96 #>  5  1     0.96 #>  6  0.98  0.93 #>  7  0.98  0.93 #>  8  0.98  0.93 #>  9  0.98  0.93 #> 10  0.98  0.9  #> # ℹ 141 more rows # Change class to predict to virginica roc_points(iris, Species, Sepal.Width, .condition = \"virginica\") #> # A tibble: 151 × 2 #>      tpr   fpr #>  * <dbl> <dbl> #>  1  1     1    #>  2  1     0.99 #>  3  0.98  0.97 #>  4  0.98  0.97 #>  5  0.98  0.97 #>  6  0.98  0.93 #>  7  0.98  0.93 #>  8  0.98  0.93 #>  9  0.98  0.93 #> 10  0.98  0.9  #> # ℹ 141 more rows"},{"path":"https://pablopnc.github.io/ROCnGO/reference/sensitivity_indexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity indexes — sensitivity_indexes","title":"Sensitivity indexes — sensitivity_indexes","text":"Sensitivity indexes provide different ways calculating area ROC curve specific TPR region. Two different approaches calculate area available: fp_auc() applies fitted partial area curve index (FpAUC). one calculates area curve adjusting points defined curve selected region. np_auc() applies normalized partial area curve index (NpAUC), calculates area curve whole specified region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/sensitivity_indexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity indexes — sensitivity_indexes","text":"","code":"fp_auc(data = NULL, response, predictor, lower_tpr, .condition = NULL)  np_auc(data, response, predictor, lower_tpr, .condition = NULL)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/sensitivity_indexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity indexes — sensitivity_indexes","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. lower_tpr numeric value 0 1, inclusive, represents lower value TPR region calculate partial area curve. definition sensitivity indexes, upper bound region established 1. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/sensitivity_indexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity indexes — sensitivity_indexes","text":"numeric value representing index score partial area ROC curve.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/sensitivity_indexes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sensitivity indexes — sensitivity_indexes","text":"Franco M. y Vivo J.-M. Evaluating Performances Biomarkers Restricted Domain High Sensitivity. Mathematics 9, 2826 (2021). Jiang Y., Metz C. E. y Nishikawa R. M. receiver operating characteristic partial area index highly sensitive diagnostic tests. Radiology 201, 745-750 (1996).","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/sensitivity_indexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity indexes — sensitivity_indexes","text":"","code":"# Calculate fp_auc of Sepal.Width as a classifier of setosa species # in TPR = (0.9, 1) fp_auc(iris, response = Species, predictor = Sepal.Width, lower_tpr = 0.9) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> [1] 0.8516667 # Calculate np_auc of Sepal.Width as a classifier of setosa species # in TPR = (0.9, 1) np_auc(iris, response = Species, predictor = Sepal.Width, lower_tpr = 0.9) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> [1] 0.472"},{"path":"https://pablopnc.github.io/ROCnGO/reference/spauc_lower_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add SpAUC lower bound to a ROC plot — spauc_lower_bounds","title":"Add SpAUC lower bound to a ROC plot — spauc_lower_bounds","text":"Calculate plot lower bound defined SpAUC specificity index.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/spauc_lower_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add SpAUC lower bound to a ROC plot — spauc_lower_bounds","text":"","code":"add_spauc_lower_bound(   data,   response = NULL,   predictor = NULL,   lower_threshold,   upper_threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/spauc_lower_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add SpAUC lower bound to a ROC plot — spauc_lower_bounds","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. lower_threshold, upper_threshold Two numbers 0 1, inclusive. numbers represent lower upper bounds region apply calculations. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/spauc_lower_bounds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add SpAUC lower bound to a ROC plot — spauc_lower_bounds","text":"SpAUC presents limitations regarding lower bound. Lower bound defined index applied sections ROC curve defined chance line. add_spauc_lower_bound() make check ensure index can safely applied. Consequently, allows enforce representation even though SpAUC cound't calculated region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/spauc_lower_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add SpAUC lower bound to a ROC plot — spauc_lower_bounds","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +   add_spauc_lower_bound(     iris,     response = Species,     predictor = Sepal.Width,     lower_threshold = 0,     upper_threshold = 0.1   )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/specificity_indexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Specificity indexes — sp_auc","title":"Specificity indexes — sp_auc","text":"Specificity indexes provide different ways calculating area ROC curve specific FPR region. Two different approaches calculate area available: tp_auc() applies tighter partial area curve index (SpAUC). one calculates area curve adjusting points defined curve selected region. sp_auc() applies standardized partial area curve index (TpAUC), calculates area curve whole specified region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/specificity_indexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specificity indexes — sp_auc","text":"","code":"sp_auc(   data = NULL,   response,   predictor,   lower_fpr,   upper_fpr,   .condition = NULL,   .invalid = FALSE )  tp_auc(   data = NULL,   response,   predictor,   lower_fpr,   upper_fpr,   .condition = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/specificity_indexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specificity indexes — sp_auc","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. lower_fpr, upper_fpr Two numbers 0 1, inclusive. numbers represent lower upper values FPR region calculate partial area curve. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .invalid FALSE, default, sp_auc() return NA ROC curve fit theoretical bounds index applied. TRUE, function force calculation return value despite probably incorrect.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/specificity_indexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specificity indexes — sp_auc","text":"numeric value representing index score partial area ROC curve.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/specificity_indexes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Specificity indexes — sp_auc","text":"McClish D. K. Analyzing Portion ROC Curve. Medical Decision Making 9, 190-195 (1989). Vivo J.-M., Franco M. y Vicari D. Rethinking ROC partial area index evaluating classification performance high specificity range. Advances Data Analysis Classification 12, 683-704 (2018).","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/specificity_indexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specificity indexes — sp_auc","text":"","code":"# Calculate sp_auc of Sepal.Width as a classifier of setosa species # in FPR = (0.9, 1) sp_auc(  iris,  response = Species,  predictor = Sepal.Width,  lower_fpr = 0,  upper_fpr = 0.1 ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> [1] 0.7242105 # Calculate tp_auc of Sepal.Width as a classifier of setosa species  # in FPR = (0.9, 1) tp_auc(  iris,  response = Species,  predictor = Sepal.Width,  lower_fpr = 0,  upper_fpr = 0.1 ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> [1] 0.7212121"},{"path":"https://pablopnc.github.io/ROCnGO/reference/sumexp_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data in a SummarizedExperiment to a data.frame — sumexp_to_df","title":"Transform data in a SummarizedExperiment to a data.frame — sumexp_to_df","text":"Transforms SummarizedExperiment data.frame can used input functions.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/sumexp_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data in a SummarizedExperiment to a data.frame — sumexp_to_df","text":"","code":"sumexp_to_df(se, .n = NULL)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/sumexp_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data in a SummarizedExperiment to a data.frame — sumexp_to_df","text":"se SummarizedExperiment object. .n integer string, representing index name assay use. SummarizedExperiment::assay() function. default, function combines every assay se argument.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/sumexp_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform data in a SummarizedExperiment to a data.frame — sumexp_to_df","text":"data.frame created combining assays colData SummarizedExperiment.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize classifiers performance in a dataset — summarize_dataset","title":"Summarize classifiers performance in a dataset — summarize_dataset","text":"Calculate series metrics describing global local performance selected classifiers dataset.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize classifiers performance in a dataset — summarize_dataset","text":"","code":"summarize_dataset(   data,   predictors = NULL,   response,   ratio,   threshold,   .condition = NULL,   .progress = FALSE )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize classifiers performance in a dataset — summarize_dataset","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. predictors vector numeric data variables represents different classifiers predictors data summarized. NULLand default, predictors match numeric variables data exception response, given numeric type. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. threshold number 0 1, inclusive, represents region bound calculate partial area curve. ratio = \"tpr\", represents lower bound TPR region, upper limit equal 1. ratio = \"fpr\", represents upper bound FPR region, lower limit equal 0. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .progress TRUE, show progress calculations.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize classifiers performance in a dataset — summarize_dataset","text":"list different elements: Performance metrics evaluated classifiers. Overall description performance metrics dataset.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize classifiers performance in a dataset — summarize_dataset","text":"","code":"summarize_dataset(iris, response = Species, ratio = \"tpr\", threshold = 0.9) #> ℹ Lower 0.9 and upper 1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> $data #> # A tibble: 4 × 6 #>   identifier      auc   pauc np_auc  fp_auc curve_shape       #>   <chr>         <dbl>  <dbl>  <dbl>   <dbl> <chr>             #> 1 Sepal.Length 0.0414 0       0     NaN     Hook under chance #> 2 Sepal.Width  0.880  0.0472  0.472   0.852 Partially proper  #> 3 Petal.Length 0      0       0     NaN     Hook under chance #> 4 Petal.Width  0      0       0     NaN     Hook under chance #>  #> $curve_shape #> # A tibble: 2 × 2 #>   curve_shape       count #>   <chr>             <int> #> 1 Hook under chance     3 #> 2 Partially proper      1 #>  #> $auc #> # A tibble: 2 × 3 #> # Groups:   auc > 0.5 [2] #>   `auc > 0.5` `auc > 0.8` count #>   <lgl>       <lgl>       <int> #> 1 FALSE       FALSE           3 #> 2 TRUE        TRUE            1 #>"},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize classifier performance — summarize_predictor","title":"Summarize classifier performance — summarize_predictor","text":"Calculates series metrics describing global local classifier performance.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_predictor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize classifier performance — summarize_predictor","text":"","code":"summarize_predictor(   data = NULL,   predictor,   response,   ratio,   threshold,   .condition = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize classifier performance — summarize_predictor","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. predictor data variable must numeric, representing values classifier predictor observation. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. ratio Ratio axis apply calculations. \"tpr\", points within specified region TPR, y axis, considered calculations. \"fpr\", points within specified region FPR, x axis, considered calculations. threshold number 0 1, inclusive, represents region bound calculate partial area curve. ratio = \"tpr\", represents lower bound TPR region, upper limit equal 1. ratio = \"fpr\", represents upper bound FPR region, lower limit equal 0. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_predictor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize classifier performance — summarize_predictor","text":"single row tibble different predictor following metrics columns: Area curve (AUC) metric global performance. Partial curve (pAUC) metric local performance. Indexes derived pAUC, depending selected ratio. Sensitivity indexes used TPR specificity indexes FPR. Curve shape specified region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/summarize_predictor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize classifier performance — summarize_predictor","text":"","code":"# Summarize Sepal.Width as a classifier of setosa species # and local performance in TPR (0.9, 1) summarize_predictor(  data = iris,  predictor = Sepal.Width,  response = Species,  ratio = \"tpr\",  threshold = 0.9 ) #> ℹ Upper threshold 1 already included in points. #> • Skipping upper threshold interpolation #> # A tibble: 1 × 5 #>     auc   pauc np_auc fp_auc curve_shape      #>   <dbl>  <dbl>  <dbl>  <dbl> <chr>            #> 1 0.880 0.0472  0.472  0.852 Partially proper # Summarize Sepal.Width as a classifier of setosa species # and local performance in FPR (0, 0.1) summarize_predictor(  data = iris,  predictor = Sepal.Width,  response = Species,  ratio = \"fpr\",  threshold = 0.1 ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> # A tibble: 1 × 5 #>     auc   pauc sp_auc tp_auc curve_shape #>   <dbl>  <dbl>  <dbl>  <dbl> <chr>       #> 1 0.880 0.0476  0.724  0.721 Concave"},{"path":"https://pablopnc.github.io/ROCnGO/reference/tpauc_lower_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add TpAUC lower bound to a ROC plot — add_tpauc_concave_lower_bound","title":"Add TpAUC lower bound to a ROC plot — add_tpauc_concave_lower_bound","text":"Calculate plot lower bound defined TpAUC specificity index. add_tpauc_lower_bound() provides upper level function automatically calculates curve shape plots lower bound better fits . Additionally, several lower level functions provided plot specific lower bounds: add_tpauc_concave_lower_bound(). Plot lower bound corresponding ROC curve concave shape selected region. add_tpauc_partially_proper_lower_bound. Plot lower bound corresponding ROC curve partially proper (presence hook) selected region. add_tpauc_under_chance_lower_bound. Plot lower bound corresponding ROC curve hook chance line selected region.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/tpauc_lower_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add TpAUC lower bound to a ROC plot — add_tpauc_concave_lower_bound","text":"","code":"add_tpauc_concave_lower_bound(   data,   response = NULL,   predictor = NULL,   lower_threshold,   upper_threshold,   .condition = NULL,   .label = NULL )  add_tpauc_partially_proper_lower_bound(   data,   response = NULL,   predictor = NULL,   lower_threshold,   upper_threshold,   .condition = NULL,   .label = NULL )  add_tpauc_under_chance_lower_bound(   data,   response = NULL,   predictor = NULL,   lower_threshold,   upper_threshold,   .condition = NULL,   .label = NULL )  add_tpauc_lower_bound(   data,   response = NULL,   predictor = NULL,   lower_threshold,   upper_threshold,   .condition = NULL,   .label = NULL )"},{"path":"https://pablopnc.github.io/ROCnGO/reference/tpauc_lower_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add TpAUC lower bound to a ROC plot — add_tpauc_concave_lower_bound","text":"data data.frame extension (e.g. tibble) containing values predictors response variables. response data variable must factor, integer character vector representing prediction outcome observation (Gold Standard). variable presents two possible outcomes, classes categories: outcome interest (one predicted) remain distinct. categories combined single category. New combined category represents \"absence\" condition predict. See .condition information. predictor data variable must numeric, representing values classifier predictor observation. lower_threshold, upper_threshold Two numbers 0 1, inclusive. numbers represent lower upper values FPR region calculate plot lower bound. .condition value response represents class, category condition interest wants predicted. NULL, condition interest selected automatically depending response type. class interest selected, rest collapsed common category, representing \"absence\" condition predicted. See vignette(\"selecting-condition\") information automatic selection performed details selecting condition interest. .label string representing name used labels. NULL, variable name predictor used label.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/tpauc_lower_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add TpAUC lower bound to a ROC plot — add_tpauc_concave_lower_bound","text":"","code":"plot_roc_curve(iris, response = Species, predictor = Sepal.Width) +   add_tpauc_lower_bound(     data = iris,     response = Species,     predictor = Sepal.Width,     upper_threshold =  0.1,     lower_threshold = 0   ) #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation #> ℹ Lower 0 and upper 0.1 thresholds already included in points #> • Skipping lower and upper threshold interpolation"},{"path":"https://pablopnc.github.io/ROCnGO/reference/transform_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms a response variable into a valid factor that can be processed downstream. — transform_response","title":"Transforms a response variable into a valid factor that can be processed downstream. — transform_response","text":"transform_response transforms response can processed steps. Function transforms input factor values 1 0 corresponding condition interest absence respectively.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/transform_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms a response variable into a valid factor that can be processed downstream. — transform_response","text":"","code":"transform_response(response, .condition = NULL)"},{"path":"https://pablopnc.github.io/ROCnGO/reference/transform_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms a response variable into a valid factor that can be processed downstream. — transform_response","text":"response factor, integer character vector categories.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/transform_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms a response variable into a valid factor that can be processed downstream. — transform_response","text":"factor levels (0,1), 1 represents condition interest 0 absence .","code":""},{"path":"https://pablopnc.github.io/ROCnGO/reference/transform_response.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transforms a response variable into a valid factor that can be processed downstream. — transform_response","text":"default function takes assumption make transformation, depending class response: factor. Function considers condition interest first level factor. integer. Function considers condition interest min value \\ response. character. Function considers condition interest first value unique(response) using sort.","code":""},{"path":"https://pablopnc.github.io/ROCnGO/news/index.html","id":"rocngo-development-version","dir":"Changelog","previous_headings":"","what":"ROCnGO (development version)","title":"ROCnGO (development version)","text":"Initial CRAN submission.","code":""}]
